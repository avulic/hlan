@model HLAN.Models.StatistikaModel

@using Microsoft.AspNetCore.Identity
@inject SignInManager<HLAN.Models.Entitie.User> SignInManager
@inject UserManager<HLAN.Models.Entitie.User> UserManager
@inject HLAN.Models.EF.HLANContext context

@{
    ViewData["Title"] = "Igraci";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var igraci = await UserManager.GetUsersInRoleAsync("Igrac");

}

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<h1>Igraci</h1>
@if (User.IsInRole("Admin") || User.IsInRole("Trener"))
{
    @using (Html.BeginForm("Create", "Statistika", FormMethod.Post))
    {
        <div class="row">
            <div class="form-group">
                <label>Ime igraca: </label>
                <select asp-for="@Model.Statistika.UserId"
                        id="igrac"
                        class="form-control"
                        asp-items="@(new SelectList(igraci, "Id", "PunoIme"))"></select>
            </div>
            <div class="form-group">
                <label>Utakmica: </label>
                <select asp-for="@Model.Statistika.UtakmicaId" id="utakmice" class="form-control"></select>
            </div>
        </div>

        <div class="row">

            <div class="form-group">
                <label>Disposals: </label>
                <input asp-for="@Model.Statistika.Disposals" value="0" type="number" class="form-control" />
            </div>
            <div class="form-group">
                <label>Marks: </label>
                <input asp-for="@Model.Statistika.Marks" value="0" type="number" class="form-control" />
            </div>
            <div>
                <label>Tackles: </label>
                <input asp-for="@Model.Statistika.Tackles" value="0" type="number" class="form-control" />
            </div>
            <div class="form-group">
                <label>Spoils: </label>
                <input asp-for="@Model.Statistika.Spoils" value="0" type="number" class="form-control" />
            </div>
            <div>
                <label>Hitouts: </label>
                <input asp-for="@Model.Statistika.Hitouts" value="0" type="number" class="form-control" />
            </div>
            <div class="form-group">
                <label>Goals: </label>
                <input asp-for="@Model.Statistika.Goals" value="0" type="number" class="form-control" />
            </div>
            <div class="form-group">
                <label>Behinds: </label>
                <input asp-for="@Model.Statistika.Behinds" value="0" type="number" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>

    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.User.PunoIme)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Disposals)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Marks)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Tackles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Spoils)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Hitouts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Goals)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Statistika.Behinds)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.StatistikaIgraca)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User.PunoIme)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Disposals)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Marks)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tackles)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Spoils)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Hitouts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Goals)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Behinds)
                </td>
                <td>
                    @Html.ActionLink("Details", "", new { }, new
                    {
                                                                @class = "btn btn-primary",
                                                                @data_toggle = "collapse",
                                                                href = "#collapseExample-" + item.User.Id,
                                                                role = "button",
                                                                @aria_expanded = "false",
                                                                @aria_controls = "collapseExample-" + item.User.Id,
                                                                onclick = "appendDetails('" + item.User.Id + "');"
                                                            })
                    @if (User.IsInRole("Admin") || User.IsInRole("Trener"))
                    {
                        //@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ })
                        //@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    }
                </td>
            </tr>

            <tr>
                <td colspan="5" class="collapse" id=@("collapseExample-" + item.User.Id)>
                    <div class="chart-wrapper">
                        <canvas id=@("main-chart"+ item.User.Id) height="400" width="400" style="min-height: 400px"></canvas>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>

    function appendDetails(id) {
        var link = '@Url.Action("Chart", "Statistika", new { id = -1  })';
        link = link.replace("-1", id);

        var ctx = document.getElementById("main-chart" + id).getContext('2d');

        $.ajax({
            url: link,
            type: "POST",
            dataType: "JSON",
            success: function (result) {
                var x = []
                result = JSON.parse(result);
                var lines = [];
                var colors = ["red", "blue", "yellow", "purple", "black"]

                for (var i = 0; i < result.length; i++) {
                    var datas = [];

                    for (var j = 0; j < result[i].Value.length; j++) {
                        datas.push(result[i].Value[j].Y);
                        x.push(moment(result[i].Value[j].X).format("MMM D"))
  
                    }

                    var line = {
                        label: result[i].Key,
                        data: datas,
                        borderWidth: 1,
                        fill: false,
                        borderColor: colors[i]
                    };
                    lines.push(line);                            
                };
               
                var uniqueNames = [];
                for (var i = 0; i < x.length; i++) {
                    if ($.inArray(x[i], uniqueNames) === -1) uniqueNames.push(x[i]);
                }
                
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: uniqueNames,
                        datasets: lines,
                    },
                    options: {
                        legend: {
                            display: true,
                            position: 'right'
                        },
                        responsive: false,
                        scales: {
                            xAxes: [{
                                type: 'time',
                                time: {
                                    format: 'MMM D'
                                },
                                distribution: 'linear'
                            }]
                        }
                    }
                });
            }
        });
    }


    $('#igrac').change(function () {
        var selected = $(this).val();
        var link = '@Url.Action("Utakmice", "Statistika", new { igracId = -1  })';
        link = link.replace("-1", selected);

        $.ajax({
            url: link,
            data: { id: $('#igrac option:selected').val() },
            type: "post",
            cache: false,
        }).done(function (data) {
            var modelDropDown = $('#utakmice');
            modelDropDown.empty();
            $.each(JSON.parse(data.utakmiceJson), function (index, model) {
                console.log(JSON.parse(data.utakmiceJson))
                modelDropDown.append(
                    $('<option>', {
                        value: model.Id
                    }).text(model.Naziv)
                );
            });
        }).fail(function (error) {

        });
    });
</script>

